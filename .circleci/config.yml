version: 2.1

orbs:
  node: circleci/node@5.0.2
  browser-tools: circleci/browser-tools@1.3.0
  cypress: cypress-io/cypress@2.0.0
  codecov: codecov/codecov@3.2.3
  jq: circleci/jq@2.2.0

executors:
  cypress:
    docker:
      - image: 'cypress/base:17.8.0'

workflows:
  web-build-and-test:
    jobs:
      - node/test:
          name: test
          version: 16.14.2-browsers
          setup:
            - browser-tools/install-chrome
            - browser-tools/install-chromedriver
            - run:
                command: |
                  google-chrome --version
                  chromedriver --version
                name: Check install
          post-steps:
            - codecov/upload
            - run:
                command: |
                  npm run lint
                name: Lint
            - run:
                command: |
                  npm audit
                name: Audit

      - cypress/run:
          name: e2e
          executor: cypress
          start: npm start
          wait-on: http://localhost:4200
          store_artifacts: true

  publish:
#    when:
#      and:
#        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
#      - cypress/run:
#          name: e2e
#          executor: cypress
#          start: npm start
#          wait-on: http://localhost:4200
#          store_artifacts: true

      - node/run:
#          requires:
#            - e2e
          name: publish
          override-ci-command: npm install --legacy-peer-deps
          version: 16.14.2-browsers
          setup:
            - run:
                command: |
                  rm -rf package-lock.json
                name: Remove package-lock
          npm-run: package:library
#          post-steps:
#            - jq/install
#            - run:
#                name: Update version tag
#                command: |
#                  cd dist/library
#                  export TAG=$(git describe --tags --abbrev=0)
#                  contents="$(jq -r --arg tag "$TAG" '.version = $tag' package.json)" && \
#                  echo "${contents}" > package.json
#            - run:
#                name: Authenticate with registry
#                command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/.npmrc
#            - run:
#                name: Publish library
#                command: |
#                  npm run publish:library
